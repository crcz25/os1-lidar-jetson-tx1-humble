##############
# Base image #
##############
FROM osrf/ros:humble-desktop-full AS base

# Set the environment variables
ENV DEBIAN_FRONTEND=noninteractive
ARG AMENT_WORKSPACE_DIR="/ament_ws"

SHELL ["/bin/bash", "-c"]

# Update, upgrade and clean packages
RUN apt-get update  \
    && apt-get upgrade -y \
    && apt-get dist-upgrade -y \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install ROS2 packages
RUN apt-get update \
    && apt-get upgrade -y \
    && apt-get install -y \
    ros-dev-tools \
    ros-${ROS_DISTRO}-rmw-cyclonedds-cpp \
    ros-${ROS_DISTRO}-xacro \
    ros-${ROS_DISTRO}-ros2-control \
    ros-${ROS_DISTRO}-ros2-controllers \
    # ros-${ROS_DISTRO}-ros-gz* \
    # ros-${ROS_DISTRO}-gz-ros2-control \
    ros-${ROS_DISTRO}-urdf-launch \
    ros-${ROS_DISTRO}-imu-tools \
    ros-${ROS_DISTRO}-rqt-topic \
    && rm -rf /var/lib/apt/lists/*

#RUN apt-get update \
# && apt-get install -y \
#    python3-vcstool \
#    ros-${ROS_DISTRO}-rqt-common-plugins \
#    ros-${ROS_DISTRO}-rqt-robot-steering \
#    ros-${ROS_DISTRO}-rqt-tf-tree \
#    ros-${ROS_DISTRO}-rviz2 \
# && rm -rf /var/lib/apt/lists/*

# Install additional packages
RUN apt-get update \
 && apt-get -y install \
    git \
    python3-colcon-clean \
    python3-osrf-pycommon \
    python3-vcstool \
    python3-smbus2 \
 && rm -rf /var/lib/apt/lists/*

# Install additional tools
RUN apt-get update \
 && apt-get install -y \
    ack \
    cloc \
    gdb \
    htop \
    iperf3 \
    iputils-ping \
    plocate \
    net-tools \
    psmisc \
    tmux \
    xterm \
    sudo \
    i2c-tools \
    nano \
 && rm -rf /var/lib/apt/lists/*

# Set the default user.
FROM base AS dev
ARG AMENT_WORKSPACE_DIR="/ament_ws"
ARG USERNAME=devuser
ARG PASSWORD=devuser
ARG USER_UID=1000
ARG USER_GID=1000

# Set the default shell to bash rather than sh
ENV DEBIAN_FRONTEND=noninteractive
SHELL ["/bin/bash", "-c"]

# Additional packages for the tracked robot

# Delete Ubuntu user if it exists
RUN if getent passwd ubuntu > /dev/null 2>&1; then \
    userdel -r ubuntu && \
    echo "Deleted existing ubuntu user"; \
fi

# Create the user
RUN groupadd --gid $USER_GID $USERNAME \
    && useradd -s /bin/bash --uid $USER_UID --gid $USER_GID -m $USERNAME \
    && usermod -aG i2c $USERNAME \
    && mkdir /home/$USERNAME/.config && chown -R $USER_UID:$USER_GID /home/$USERNAME/.config

# Setup sudo
RUN apt-get update \
    && apt-get install -y sudo \
    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
    && chmod 0440 /etc/sudoers.d/$USERNAME \
    && rm -rf /var/lib/apt/lists/*
# Create XDG_RUNTIME_DIR directory (run/user/UID) and set permissions (0700)
RUN mkdir -p /run/user/${USER_UID} \
    && sudo chown -R ${USER_UID}:${USER_GID} /run/user/${USER_UID} \
    && sudo chmod 0700 /run/user/${USER_UID}
# Setup the workspace
RUN mkdir -p ${AMENT_WORKSPACE_DIR}/src \
    && chown -R ${USER_UID}:${USER_GID} /home/${USERNAME} \
    && chown -R ${USER_UID}:${USER_GID} ${AMENT_WORKSPACE_DIR}
# Change password
RUN echo "${USERNAME}:${PASSWORD}" | sudo chpasswd

###############
#  Full image #
###############
FROM dev AS full

# Set the renamed user as the default user for the container
USER $USERNAME

### Setup .bashrc ###
ENV DEBIAN_FRONTEND=dialog
# Add alias for ros sources
RUN echo "alias src_ros='source /opt/ros/${ROS_DISTRO}/setup.bash'" >> /home/$USERNAME/.bashrc
# Add completion of vcstool
RUN echo "source /usr/share/vcstool-completion/vcs.bash" >> /home/$USERNAME/.bashrc
# Add source of ROS
RUN echo "source /opt/ros/${ROS_DISTRO}/setup.bash" >> /home/$USERNAME/.bashrc
# FIX setuptools for colcon
RUN echo 'export PYTHONWARNINGS="ignore:setup.py install is deprecated::setuptools.command.install"' >> /home/$USERNAME/.bashrc
# Build the workspace
RUN echo "alias build_ws='colcon build --symlink-install --cmake-args '-DCMAKE_BUILD_TYPE=Release' -Wall -Wextra -Wpedantic && \
    source /ament_ws/install/setup.bash'" >> /home/$USERNAME/.bashrc

# Set entrypoint
COPY docker/entrypoint.sh /usr/local/bin/entrypoint.sh
RUN sudo chmod +x /usr/local/bin/entrypoint.sh
ENTRYPOINT ["/bin/bash", "/usr/local/bin/entrypoint.sh"]

# Exec the shell
CMD ["/bin/bash"]

